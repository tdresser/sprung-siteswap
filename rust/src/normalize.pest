crossed_inverted = { "ci" | "ic" }
inverted = {"i"}
crossed = {"c"}
natural = {"n"}

bottom_natural = { "B" }
bottom_opposite = { "b" }
top_natural = { "T" }
top_opposite = { "t" }
position_pair_item = _{ bottom_natural | bottom_opposite | top_natural | top_opposite }
position_pair = { position_pair_item ~ position_pair_item }

position = _{ crossed_inverted | inverted | crossed | natural | position_pair }

zip_position = { position }
arc_position = { position }
infix_arc_position = { position }

digit = { '0'..'9' } // Looks like this needs an extra wrapper? Gross.
C = {"C"}
F = {"F"}
B = {"B"}

ambiguous_arc_and_zip = { crossed_inverted }
ambiguous_arc = { crossed }
ambiguous_zip = { inverted }

infix_coming = { &ANY }
push_infix = { &ANY }

notation = { 
    SOI ~ (
    ((zip_position ~ "z")* ~ "S" ~ ( // infix arcs
        (infix_arc_position? ~ push_infix ~ digit)+ | 
        (infix_arc_position? ~ push_infix ~ (C | F)))) |
    ((zip_position ~ "z")* ~ (arc_position ~ "a")* ~ "S" ~ ( // explicit zips, explicit arcs
        digit+ | C | F)) | 
    ((arc_position ~ "a")* ~ ambiguous_zip ~ "S" ~ ( // explicit arcs, ambiguous zip
        digit+ | C | F)) | 
    ((zip_position ~ "z")* ~ ambiguous_arc ~ "S" ~ ( // explicit zips, ambiguous arc
        digit+ | C | F)) |    
    (ambiguous_zip ~ "S" ~ ( // infix arcs, ambiguous zip
        (infix_arc_position? ~ push_infix ~ digit)+ | 
        (infix_arc_position? ~ push_infix ~ (C | F)))) |
    (ambiguous_arc_and_zip ~ "S" ~ ( // ambiguous 
        digit+ | C | F)) |
    ((zip_position ~ "z")* ~ (arc_position ~ "a")* ~ B) | // explicit zips, explicit arcs (box)
    ((zip_position ~ "z")* ~ ambiguous_arc ~ B) | // explicit zips, ambiguous arc (box)
    ((arc_position ~ "a")* ~ ambiguous_zip ~ B) | // explicit arcs, ambiguous zip (box)
    (ambiguous_arc_and_zip ~ B) // ambiguous (box)
    ) ~ EOI
}